from fastapi import APIRouter, Path

router = APIRouter()

multiplicadores = {
    1: [1.0000, 1.2000, 1.5000, 2.0000, 2.5000, 3.5000, 5.0000, 7.0000, 10.0000, 13.0000, 17.0000, 22.0000, 28.0000, 36.0000, 46.0000, 58.0000, 73.0000, 92.0000, 115.0000, 140.0000, 170.0000, 210.0000, 260.0000, 320.0000],
    2: [1.0020, 1.5000, 2.0000, 2.8000, 3.8000, 5.5000, 8.0000, 11.0000, 15.0000, 20.0000, 26.0000, 34.0000, 44.0000, 56.0000, 72.0000, 92.0000, 116.0000, 145.0000, 180.0000, 220.0000, 270.0000, 340.0000, 430.0000],
    3: [1.0030, 1.6000, 2.4000, 3.3000, 4.8000, 7.0000, 10.0000, 14.0000, 20.0000, 27.0000, 36.0000, 47.0000, 62.0000, 80.0000, 102.0000, 130.0000, 165.0000, 210.0000, 270.0000, 340.0000, 430.0000, 540.0000],
    4: [1.1547, 1.3842, 1.7000, 2.1000, 2.6000, 3.3000, 4.2000, 5.4000, 6.9000, 8.8000, 11.0000, 13.8000, 17.5000, 22.0000, 27.5000, 34.0000, 42.0000, 52.0000, 64.0000, 78.0000, 95.0000],
    5: [1.2125, 1.5248, 1.9920, 2.6000, 3.5000, 4.8000, 6.5000, 8.8000, 11.8000, 15.5000, 20.0000, 26.0000, 33.0000, 42.0000, 53.0000, 67.0000, 85.0000, 107.0000, 135.0000, 170.0000],
    6: [1.2763, 1.6820, 2.3460, 3.3000, 4.8000, 7.0000, 10.0000, 14.0000, 19.0000, 26.0000, 35.0000, 46.0000, 60.0000, 78.0000, 100.0000, 130.0000, 170.0000, 220.0000, 280.0000],
    7: [1.3472, 1.8570, 2.7750, 4.2000, 6.5000, 10.0000, 15.0000, 22.0000, 32.0000, 46.0000, 65.0000, 90.0000, 120.0000, 160.0000, 210.0000, 280.0000, 370.0000, 480.0000],
    8: [1.4264, 2.0510, 3.2950, 5.4000, 8.8000, 14.0000, 22.0000, 34.0000, 50.0000, 75.0000, 110.0000, 160.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    9: [1.4748, 2.2650, 3.9300, 6.9000, 11.8000, 19.0000, 32.0000, 50.0000, 75.0000, 110.0000, 160.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    10: [1.5510, 2.5000, 4.7100, 8.8000, 15.5000, 26.0000, 46.0000, 75.0000, 110.0000, 160.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    11: [1.6312, 2.7580, 5.6700, 11.0000, 20.0000, 35.0000, 65.0000, 110.0000, 160.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    12: [1.7155, 3.0410, 6.8500, 13.8000, 26.0000, 46.0000, 90.0000, 160.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    13: [1.8040, 3.3510, 8.3000, 17.5000, 33.0000, 60.0000, 120.0000, 230.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    14: [1.8975, 3.6910, 10.1000, 22.0000, 42.0000, 78.0000, 160.0000, 330.0000, 470.0000, 670.0000, 950.0000],
    15: [1.9961, 4.0650, 12.3000, 27.5000, 53.0000, 100.0000, 230.0000, 470.0000, 670.0000, 950.0000],
    16: [2.1000, 4.4770, 15.0000, 34.0000, 67.0000, 130.0000, 330.0000, 670.0000, 950.0000],
    17: [2.2090, 4.9320, 18.2000, 42.0000, 85.0000, 170.0000, 470.0000, 600.0000],
    18: [2.3231, 5.4340, 22.0000, 52.0000, 107.0000, 220.0000, 280.0000],
    19: [2.4424, 5.9890, 26.5000, 64.0000, 135.0000, 280.0000],
    20: [2.5670, 6.6040, 32.0000, 78.0000, 170.0000],
}

def generate_paytable(num_minas: int):
    paytable = []
    multiplicadores_lista = multiplicadores[num_minas]
    for coins in range(1, len(multiplicadores_lista) + 1):  
        multiplicador = multiplicadores_lista[coins - 1]
        paytable.append({
            "moedas": coins,
            "multiplicador": round(multiplicador, 4)
        })
    return paytable

@router.get("/paytable/{num_minas}")
async def get_paytable_by_num_minas(
    num_minas: int = Path(..., ge=1, le=20, description="NÃºmero de minas entre 1 a 20")
 ):
    paytable = generate_paytable(num_minas)
    return {"num_minas": num_minas, "paytable": paytable}